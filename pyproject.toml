[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "slack-ai-agent"
dynamic = ["version"]
description = "A Slack AI agent that uses LangChain and LangGraph to execute agentic workflows."
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
authors = [
  { name = "Kevin Pilch", email = "kev.pilch@gmail.com" },
]
dependencies = [
  "langchain_openai" ,
  "langgraph" ,
  "trustcall" ,
  "langchain_core",
  "slack-sdk",
  "slack-bolt",
  "flask",
  "python-dotenv"
]

[project.urls]
Documentation = "https://github.com/Kevin Pilch/slack-ai-agent#readme"
Issues = "https://github.com/Kevin Pilch/slack-ai-agent/issues"
Source = "https://github.com/Kevin Pilch/slack-ai-agent"

[tool.hatch.version]
path = "src/slack_ai_agent/__about__.py"

[tool.hatch.envs.default]
type = "virtual"
path = ".venv"
dependencies = [
  "pre-commit",     # Pre-commit hooks for automated checks
  "black",          # Code formatter for consistency
  "ruff",           # Linter for style and error checking
  "mypy",           # Static type checking
  "pytest",         # Unit testing framework
  "pytest-cov",     # Plugin for pytest to measure test coverage
  "bandit",         # Security scanner to detect vulnerabilities
]

[tool.hatch.envs.default.scripts]
test = "pytest --cov=src tests"
lint = "ruff check --fix"
type-check = "mypy src"
security-scan = "bandit -r slack-ai-agent"
precommit = "pre-commit run --all-files"
slack = "python -m src.slack_ai_agent.slack"

[tool.ruff]
lint.select = ["E4", "E7", "E9", "F", "B"]
line-length = 79
lint.ignore = ["E501"]
format.quote-style = "double"

[tool.mypy]
python_version = 3.11
strict = true
namespace_packages = true
explicit_package_bases = true
packages = "src"
disable_error_code = ["misc"]

[tool.pytest.ini_options]
addopts = "--strict-markers"
testpaths = ["tests"]

[tool.bandit]
skips = ["B101"]
exclude_dirs = ["tests"]

[tool.hatch.envs.local]
inherit = ["default"]

[tool.hatch.envs.local.env-vars]
APP_ENV = "local"
